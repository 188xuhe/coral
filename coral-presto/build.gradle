apply plugin:'li-java'
apply plugin: 'maven-publish'

dependencies {
  // see :coral-hive build.gradle for why we add depedency this way
  compile files("${project(':coral-calcite').buildDir.absolutePath}/libs/coral-calcite-${version}.jar")  {
    builtBy project(':coral-calcite').tasks.getByName('shadowJar')
  }

  compile spec.external.gson
  compile spec.external.'javax-annotation'

  testCompile spec.external.'presto-parser'

  testCompile project(path: ':coral-hive')

  testCompile (spec.product.hive.'hive-exec') {
    exclude group: 'org.apache.avro', module: 'avro-tools'
    // These exclusions are required to prevent duplicate classes since we include
    // shaded jar above
    exclude group: 'org.apache.calcite', module: 'calcite-core'
    exclude group: 'org.apache.calcite', module: 'calcite-avatica'
  }
}

def pomPath = "$buildDir/${name}.pom"
model {
  tasks.generatePomFileForMavenJavaPublication {
    destination = file("$pomPath")
  }

  tasks.jar {
    dependsOn tasks.generatePomFileForMavenJavaPublication
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      pom.withXml {
        def depRoot = asNode().dependencies[0]
        if (depRoot == null) {
          depRoot = asNode().appendNode("dependencies")
        }
        def dep = asNode().dependencies[0].appendNode("dependency")
        dep.appendNode("groupId", project.group)
        dep.appendNode("artifactId", project(":coral-calcite").name)
        dep.appendNode("version", version)
      }
    }
  }
}

// need to explicitly set this because we are generating pom files
generateModuleArtifactSpec.defaultArtifact = jar
artifacts {
  archives file: file("$pomPath"), name: "$name", type: "pom"
  archives jar, javadocJar, sourcesJar
}
