apply plugin: 'li-java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'

dependencies {
  compile spec.external.'calcite-core'
  compile spec.external.'avatica-core'
}

def pomPath = "${buildDir}/${name}.pom"

model {
   tasks.generatePomFileForShadowPublication {
    destination = file("$pomPath")
  }
  // always make sure we generate pom file along with shadowJar
  tasks.shadowJar {
    dependsOn tasks.generatePomFileForShadowPublication
  }
}

publishing {
  publications {
    shadow(MavenPublication) { publication ->
      project.shadow.component(publication)
    }
  }
}

// Publish only shadowed jar
generateModuleArtifactSpec.defaultArtifact = shadowJar
jar.enabled = false

// shade
def shadeBase = "$project.group"
shadowJar {
  classifier = ''
  zip64 true

  // relocate dependencies but do not relocate calcite classes
  relocate 'com.google.protobuf', "${shadeBase}.com.google.protobuf"
  relocate 'com.google.thirdparty', "${shadeBase}.com.google.thirdparty"
  relocate 'google.protobuf', "${shadeBase}.google.protobuf"
  relocate 'com.google.common', "${shadeBase}.com.google.common"
  relocate 'com.fasterxml.jackson', "${shadeBase}.com.fasterxml.jackson"
  relocate 'org.apache.http', "${shadeBase}.org.apache.http"
  relocate 'org.apache.commons', "${shadeBase}.org.apache.commons"
  relocate 'org.slf4j', "${shadeBase}.org.slf4j"
  relocate 'javax.annotation', "${shadeBase}.javax.annotation"

  relocate 'org.codehaus', "${shadeBase}.org.codehaus"
  relocate 'org.pentaho', "${shadeBase}.org.pentaho"

  exclude 'mozilla/public-suffix-list.txt'
  exclude 'META-INF/maven/**'
}

artifacts {
  archives file: file("$pomPath"), name: "$name", type: "pom"
  archives shadowJar, javadocJar, sourcesJar
}
