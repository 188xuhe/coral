apply plugin: 'li-java'
apply plugin: 'distribution'
apply plugin: 'maven'

dependencies {
  compile(spec.product.hive.'hive-exec') {
    // Exclude calcite. We want to use newer version
    exclude group: 'org.apache.calcite', module: 'calcite-core'
    // avro-tools brings in hadoop-core package files causing duplicate jars and runtime errors
    exclude group: 'org.apache.avro', module: 'avro-tools'
  }
  compile spec.product.hadoop.'hadoop-mapreduce-client-common'
  compile spec.product.hadoop.'hadoop-auth'
  compile spec.external.'calcite-core'
  compile spec.external.'avatica-core'
  compile spec.external.'calcite-avatica'
}

def pomPath = "$buildDir/${name}.pom"

task createPom {
  // doLast is required for successful 'ligradle clean build'
  doLast {
    pom {
      project {
        groupId "$group"
        artifactId "$name"
      }
    }.writeTo(pomPath)
  }
}

artifacts {
  archives jar, distTar, javadocJar, sourcesJar
  archives file: file("$pomPath"), name: "$name", type: 'text', builtBy: createPom
}

distributions {
  main {
    contents {
      from jar
      from projects.configurations.runtime
    }
  }
}

build.dependsOn distTar
